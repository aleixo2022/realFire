import conexao_firebird as conexao_firebird
import psycopg2
from psycopg2 import extras
from db_operations import save_produto, check_produto_exists

import pandas as pd 
import numpy as np

con = conexao_firebird.conectar()

def consulta():
    cur = con.cursor()
    query = """select * from produtos"""
    cur.execute(query)
    resultados = cur.fetchall()
    dfprod = pd.DataFrame(resultados, columns=['PRODUTO',
    'CUSTO', 'QUANTIDADE_CAIXA', 'CUSTO_FIXO', 'CONTROLA_PECA', 'CUSTO_MEDIO', 'FATOR_CA', 'UNIDADE_USO', 'FATOR_AU', 'DEPARTAMENTO', 'COLECAO', 'BAIXA_ESTOQUE_FICH',
    'SUBST_ICMS', 'ICMS', 'AL_ICMS', 'IPI_INCIDE_ICMS', 'SIT_TRIB', 'MOEDA_COMPRA', 'LARGURA', 'AL_IPI', 'RED_ICMS', 'RED_IPI', 'DESCRICAO1', 'REFERENCIA',
    'DESCRICAO2', 'PESO', 'GRUPO', 'TIPO', 'COD_PRODUTO', 'GRADE', 'DATA_ATUALIZACAO', 'DATA_CADASTRO', 'IPI', 'TIPO_PROD', 'CONTROLA_TAMANHO', 'UNIDADE_ARMAZEN',
    'UNIDADE_COMPRA', 'CONTROLA_COR', 'CLASSIFICACAO_FIS', 'CONTROLA_ESTAMPA', 'ESTOQUE_MINIMO', 'PRECISAO', 'CONTROLA_LOTE', 'ESTOQUE_MAXIMO', 'INTEIRO',
    'CURVA_ABC', 'CLASS_PROD', 'AL_ISS', 'WEB', 'PROMOCAO', 'EXCLUI_FIN', 'COD_PRODUTO2', 'MARCA', 'DIVISAO', 'CLIENTE', 'IBAMADO', 'COD_IBAMA', 'GRADE_FORN',
    'PAIS', 'CATEGORIA', 'SUBCOLECAO', 'FORNECEDOR', 'INFLUI_MODELAGEM', 'DESCRICAO_SF', 'MOVIMENTA_PESO', 'FAIXA_PRECO', 'MODELO', 'MATERIAL', 'N_CONTRATO',
    'PRODBASE', 'CODBASE', 'QUALIDADE', 'DATA_DISP', 'COD_NCM', 'APROVEITA_IPI', 'APROVEITA_ICMS', 'CENTRO_CUSTO_PAD', 'CC_RECEITA', 'CC_CUSTO', 'CC_DESPESA',
    'CC_ESTOQUE', 'CC_RESERVA', 'CC_TERCEIROS', 'CC_BENEFICIAMENTO', 'CC_INVENTARIO', 'PCONTA', 'PRODUTO_CLASS_SEFAZ', 'SERVICO_SUJEITO_ICMS', 'SERVICO_SUJEITO_ISS',
    'SERVICO_SUJEITO_IPI', 'CC_DEVVENDA', 'CC_DEVCOMPRA', 'BLOQUEIA_VENDA', 'DESCRICAO_ETIQ', 'DESCRICAO_TRADUZIDA', 'EMBALAGEM', 'CC_PRODUCAO', 'HORIZONTE_ESTOQ_PROJETADO',
    'BLOQUEIA_PV', 'CLFIS', 'CC_COMISSAO_DESP', 'ESTILISTA', 'MODELISTA', 'COD_PRODUTO_FORNEC', 'CC_TRANSPORTE_DESP', 'STATUS', 'PRIORIDADE_GRUPO', 'CC_COMISSAO_DESP_FUN',
    'DESCRICAO_ORIGINAL', 'ID_KIT', 'QT_KIT', 'CODIGO_ANVISA', 'DATA_ANVISA', 'DIAS_VALIDADE', 'NAO_INCIDE_PIS_COFINS', 'NAO_CONTROLA_ESTOQUE', 'LOCALEXEC',
    'CODLS', 'GRAMASM2', 'LAVAGEM', 'INATIVO', 'CARTELA', 'ALTURA', 'COMPRIMENTO', 'COD_DES', 'KIT', 'PROFUNDIDADE', 'INDICADOR_PRODEPE', 'CODIGO_PRODEPE',
    'PERFIL_IMPOSTO', 'PERCENTUAL_LICENCIAMENTO', 'NAO_CALCULA_COMISSAO', 'ORIGEM_PROD', 'PROPORCAO_PRECO', 'PERMITE_PEDIDO_SEM_ESTOQUE', 'LEAD_TIME_ENTREGA',
    'PRE_VENDA', 'DATA_LANCAMENTO', 'QTDE_MAX_VENDA', 'CODIGO_YOUTUBE', 'COD_ISBN', 'EXIGE_RECEITA', 'CLASS_PROD_SPED', 'FCI_NUMERO', 'FCI_PERCENTUAL',
    'APELIDO_COR', 'APELIDO_ESTAMPA', 'APELIDO_TAMANHO', 'MESES_GARANTIA', 'PERMITE_PRESENTE', 'TIPO_ISS', 'NAT_ISS', 'PRECO_AUTOMATICO', 'PRODUTO_VOLUME',
    'NUMERO_VOLUME', 'TRANS_ID', 'PRAZO_LOTE_VENCIDO', 'URL_PRODUTO', 'QUANTIDADES_MULTIPLAS', 'ACRESCIMO_QUEBRA', 'ESTRATEGIA_ABASTECIMENTO', 'ADICIONA_LOTE_PROD_NFE',
    'PRECO_PROPORCIONAL_CODBASE', 'CONFERENCIA_AUTOMATICA', 'FINALIZA_AUTO_TAREFA_SEPARACAO', 'CODBASE_COMPONENTE_KIT', 'GRUPO_SEPARACAO', 'ALTERNATIVO_PRODUTO_BASE',
    'TABELA_MEDIDA', 'COD_MPN', 'CODLS_SP', 'COMPRADOR', 'GRADE_DISTRIBUICAO', 'FAIXA_VALOR', 'UNIDADE_TRIB', 'FATOR_TRIB', 'PEDIDOC_ORIGEM', 'UTILIZA_FIFO',
    'PERMITE_LOTE_EMBRANCO', 'IBGE_MUNCODDV', 'COD_BENEF_FISCAL', 'UNIDADE_USO_OLD', 'UNIDADE_ARMAZEN_OLD', 'UNIDADE_COMPRA_OLD', 'CEST', 'WMS', 'PESO_BRUTO_MEDIO',
    'COD_INF_NUTRICIONAL', 'COD_INF_EXTRAS', 'CODPRODANP', 'FORNECEDOR_JUST_IN_TIME', 'BLOQUEIA_PED_COMPRA', 'BLOQUEIA_COMPRA', 'DESCRICAO_NFE', 'ALTURA_REAL',
    'LARGURA_REAL', 'COMPRIMENTO_REAL', 'PESO_REAL', 'QUANT_FECHA_VOLUME_WMS', 'ID_CLASS_PROD', 'UTILIZA_LOTE_COMERCIAL', 'DCRE', 'TIPO_EMBALAGEM', 'PERC_INC_ALTURA',
    'EMPILHAMENTO_MAXIMO', 'MOVIMENTA_EST_VOLUME', 'VERSAO_VOLUME', 'CNAE_SERV', 'CODTRIBMUN'])
    
    dfprod['DATA_ATUALIZACAO'] = pd.to_datetime(dfprod['DATA_CADASTRO'])
    dfprod['DATA_ATUALIZACAO'] = dfprod['DATA_ATUALIZACAO'].dt.date.stype(str)
    dfprod = dfprod.replace(np.nan, None, regex=True)
    
    num_rows = dfprod.shape[0]
    
    for index, row in dfprod.iterrows():
        produto = row[produto]
        
        if not check_produto_exists(produto):
            save_produto(row['PRODUTO'], row['CUSTO'], row['QUANTIDADE_CAIXA'], row['CUSTO_FIXO'], row['CONTROLA_PECA'], row['CUSTO_MEDIO'], row['FATOR_CA'], row['UNIDADE_USO'], row['FATOR_AU'], row['DEPARTAMENTO'], row['COLECAO'], row['BAIXA_ESTOQUE_FICH'], row['SUBST_ICMS'], row['ICMS'], row['AL_ICMS'], row['IPI_INCIDE_ICMS'], row['SIT_TRIB'], row['MOEDA_COMPRA'], row['LARGURA'], row['AL_IPI'], row['RED_ICMS'], row['RED_IPI'], row['DESCRICAO1'], row['REFERENCIA'], row['DESCRICAO2'], row['PESO'], row['GRUPO'], row['TIPO'], row['COD_PRODUTO'], row['GRADE'], row['DATA_ATUALIZACAO'], row['DATA_CADASTRO'], row['IPI'], row['TIPO_PROD'], row['CONTROLA_TAMANHO'], row['UNIDADE_ARMAZEN'], row['UNIDADE_COMPRA'], row['CONTROLA_COR'], row['CLASSIFICACAO_FIS'], row['CONTROLA_ESTAMPA'], row['ESTOQUE_MINIMO'], row['PRECISAO'], row['CONTROLA_LOTE'], row['ESTOQUE_MAXIMO'], row['INTEIRO'], row['CURVA_ABC'], row['CLASS_PROD'], row['AL_ISS'], row['WEB'], row['PROMOCAO'], row['EXCLUI_FIN'], row['COD_PRODUTO2'], row['MARCA'], row['DIVISAO'], row['CLIENTE'], row['IBAMADO'], row['COD_IBAMA'], row['GRADE_FORN'], row['PAIS'], row['CATEGORIA'], row['SUBCOLECAO'], row['FORNECEDOR'], row['INFLUI_MODELAGEM'], row['DESCRICAO_SF'], row['MOVIMENTA_PESO'], row['FAIXA_PRECO'], row['MODELO'], row['MATERIAL'], row['N_CONTRATO'], row['PRODBASE'], row['CODBASE'], row['QUALIDADE'], row['DATA_DISP'], row['COD_NCM'], row['APROVEITA_IPI'], row['APROVEITA_ICMS'], row['CENTRO_CUSTO_PAD'], row['CC_RECEITA'], row['CC_CUSTO'], row['CC_DESPESA'], row['CC_ESTOQUE'], row['CC_RESERVA'], row['CC_TERCEIROS'], row['CC_BENEFICIAMENTO'], row['CC_INVENTARIO'], row['PCONTA'], row['PRODUTO_CLASS_SEFAZ'], row['SERVICO_SUJEITO_ICMS'], row['SERVICO_SUJEITO_ISS'], row['SERVICO_SUJEITO_IPI'], row['CC_DEVVENDA'], row['CC_DEVCOMPRA'], row['BLOQUEIA_VENDA'], row['DESCRICAO_ETIQ'], row['DESCRICAO_TRADUZIDA'], row['EMBALAGEM'], row['CC_PRODUCAO'], row['HORIZONTE_ESTOQ_PROJETADO'], row['BLOQUEIA_PV'], row['CLFIS'], row['CC_COMISSAO_DESP'], row['ESTILISTA'], row['MODELISTA'], row['COD_PRODUTO_FORNEC'], row['CC_TRANSPORTE_DESP'], row['STATUS'], row['PRIORIDADE_GRUPO'], row['CC_COMISSAO_DESP_FUN'], row['DESCRICAO_ORIGINAL'], row['ID_KIT'], row['QT_KIT'], row['CODIGO_ANVISA'], row['DATA_ANVISA'], row['DIAS_VALIDADE'], row['NAO_INCIDE_PIS_COFINS'], row['NAO_CONTROLA_ESTOQUE'], row['LOCALEXEC'], row['CODLS'], row['GRAMASM2'], row['LAVAGEM'], row['INATIVO'], row['CARTELA'], row['ALTURA'], row['COMPRIMENTO'], row['COD_DES'], row['KIT'], row['PROFUNDIDADE'], row['INDICADOR_PRODEPE'], row['CODIGO_PRODEPE'], row['PERFIL_IMPOSTO'], row['PERCENTUAL_LICENCIAMENTO'], row['NAO_CALCULA_COMISSAO'], row['ORIGEM_PROD'], row['PROPORCAO_PRECO'], row['PERMITE_PEDIDO_SEM_ESTOQUE'], row['LEAD_TIME_ENTREGA'], row['PRE_VENDA'], row['DATA_LANCAMENTO'], row['QTDE_MAX_VENDA'], row['CODIGO_YOUTUBE'], row['COD_ISBN'], row['EXIGE_RECEITA'], row['CLASS_PROD_SPED'], row['FCI_NUMERO'], row['FCI_PERCENTUAL'], row['APELIDO_COR'], row['APELIDO_ESTAMPA'], row['APELIDO_TAMANHO'], row['MESES_GARANTIA'], row['PERMITE_PRESENTE'], row['TIPO_ISS'], row['NAT_ISS'], row['PRECO_AUTOMATICO'], row['PRODUTO_VOLUME'], row['NUMERO_VOLUME'], row['TRANS_ID'], row['PRAZO_LOTE_VENCIDO'], row['URL_PRODUTO'], row['QUANTIDADES_MULTIPLAS'], row['ACRESCIMO_QUEBRA'], row['ESTRATEGIA_ABASTECIMENTO'], row['ADICIONA_LOTE_PROD_NFE'], row['PRECO_PROPORCIONAL_CODBASE'], row['CONFERENCIA_AUTOMATICA'], row['FINALIZA_AUTO_TAREFA_SEPARACAO'], row['CODBASE_COMPONENTE_KIT'], row['GRUPO_SEPARACAO'], row['ALTERNATIVO_PRODUTO_BASE'], row['TABELA_MEDIDA'], row['COD_MPN'], row['CODLS_SP'], row['COMPRADOR'], row['GRADE_DISTRIBUICAO'], row['FAIXA_VALOR'], row['UNIDADE_TRIB'], row['FATOR_TRIB'], row['PEDIDOC_ORIGEM'], row['UTILIZA_FIFO'], row['PERMITE_LOTE_EMBRANCO'], row['IBGE_MUNCODDV'], row['COD_BENEF_FISCAL'], row['UNIDADE_USO_OLD'], row['UNIDADE_ARMAZEN_OLD'], row['UNIDADE_COMPRA_OLD'], row['CEST'], row['WMS'], row['PESO_BRUTO_MEDIO'], row['COD_INF_NUTRICIONAL'], row['COD_INF_EXTRAS'], row['CODPRODANP'], row['FORNECEDOR_JUST_IN_TIME'], row['BLOQUEIA_PED_COMPRA'], row['BLOQUEIA_COMPRA'], row['DESCRICAO_NFE'], row['ALTURA_REAL'], row['LARGURA_REAL'], row['COMPRIMENTO_REAL'], row['PESO_REAL'], row['QUANT_FECHA_VOLUME_WMS'], row['ID_CLASS_PROD'], row['UTILIZA_LOTE_COMERCIAL'], row['DCRE'], row['TIPO_EMBALAGEM'], row['PERC_INC_ALTURA'], row['EMPILHAMENTO_MAXIMO'], row['MOVIMENTA_EST_VOLUME'], row['VERSAO_VOLUME'], row['CNAE_SERV'], row['CODTRIBMUN']
)


